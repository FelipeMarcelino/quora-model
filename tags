!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := help$/;"	m
ALLSPHINXOPTS	docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALLSPHINXOPTS	docs/make.bat	/^	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%$/;"	v
ALLSPHINXOPTS	docs/make.bat	/^set ALLSPHINXOPTS=-d %BUILDDIR%\/doctrees %SPHINXOPTS% .$/;"	v
BUCKET	Makefile	/^BUCKET = [OPTIONAL] your-bucket-for-syncing-data (do not include 's3:\/\/')$/;"	m
BUILDDIR	docs/Makefile	/^BUILDDIR      = _build$/;"	m
BUILDDIR	docs/make.bat	/^set BUILDDIR=_build$/;"	v
Commands	docs/commands.rst	/^Commands$/;"	c
F	build/lib/src/models/model.py	/^import torch.nn.functional as F$/;"	I
F	src/models/model.py	/^import torch.nn.functional as F$/;"	I
Getting started	docs/getting-started.rst	/^Getting started$/;"	c
HAS_CONDA	Makefile	/^HAS_CONDA=False$/;"	m
HAS_CONDA	Makefile	/^HAS_CONDA=True$/;"	m
I18NSPHINXOPTS	docs/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
I18NSPHINXOPTS	docs/make.bat	/^	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%$/;"	v
I18NSPHINXOPTS	docs/make.bat	/^set I18NSPHINXOPTS=%SPHINXOPTS% .$/;"	v
Indices and tables	docs/index.rst	/^Indices and tables$/;"	c
OptionEatAll	src/models/train_model.py	/^class OptionEatAll(click.Option):$/;"	c
PAPER	docs/Makefile	/^PAPER         =$/;"	m
PAPER	docs/make.bat	/^	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter$/;"	v
PAPEROPT_a4	docs/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	docs/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
PROFILE	Makefile	/^PROFILE = default$/;"	m
PROJECT_DIR	Makefile	/^PROJECT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
PROJECT_NAME	Makefile	/^PROJECT_NAME = quora-model$/;"	m
PYTHON_INTERPRETER	Makefile	/^PYTHON_INTERPRETER = python3$/;"	m
Project Organization	README.md	/^Project Organization$/;"	s
QuoraDataset	build/lib/src/models/create_dataset.py	/^class QuoraDataset(Dataset):$/;"	c
QuoraDataset	src/models/create_dataset.py	/^class QuoraDataset(Dataset):$/;"	c
QuoraModel	build/lib/src/models/model.py	/^class QuoraModel(nn.Module):$/;"	c
QuoraModel	src/models/model.py	/^class QuoraModel(nn.Module):$/;"	c
REQUIRED_PYTHON	test_environment.py	/^REQUIRED_PYTHON = "python3"$/;"	v
SPHINXBUILD	docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXBUILD	docs/make.bat	/^	set SPHINXBUILD=sphinx-build$/;"	v
SPHINXOPTS	docs/Makefile	/^SPHINXOPTS    =$/;"	m
Syncing data to S3	docs/commands.rst	/^Syncing data to S3$/;"	s	chapter:Commands
__getitem__	build/lib/src/models/create_dataset.py	/^    def __getitem__(self, idx):$/;"	m	class:QuoraDataset
__getitem__	src/models/create_dataset.py	/^    def __getitem__(self, idx):$/;"	m	class:QuoraDataset
__init__	build/lib/src/models/create_dataset.py	/^    def __init__(self, data, transform=None):$/;"	m	class:QuoraDataset
__init__	build/lib/src/models/model.py	/^    def __init__(self,kernel_sizes, out_channels, stride, hidden_size,layers, embedding_dim,outp/;"	m	class:QuoraModel
__init__	src/models/create_dataset.py	/^    def __init__(self, data, transform=None):$/;"	m	class:QuoraDataset
__init__	src/models/model.py	/^    def __init__(self,kernel_sizes, out_channels, stride, hidden_size,layers, embedding_dim,outp/;"	m	class:QuoraModel
__init__	src/models/train_model.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:OptionEatAll
__len__	build/lib/src/models/create_dataset.py	/^    def __len__(self):$/;"	m	class:QuoraDataset
__len__	src/models/create_dataset.py	/^    def __len__(self):$/;"	m	class:QuoraDataset
add_to_parser	src/models/train_model.py	/^    def add_to_parser(self, parser, ctx):$/;"	m	class:OptionEatAll
add_word_to_dict	build/lib/src/features/build_features.py	/^def add_word_to_dict(token,word_dict):$/;"	f
add_word_to_dict	src/features/build_features.py	/^def add_word_to_dict(token,word_dict):$/;"	f
aws	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/ --profile $(PROFILE)$/;"	t
aws	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/$/;"	t
aws	Makefile	/^	aws s3 sync s3:\/\/$(BUCKET)\/data\/ data\/ --profile $(PROFILE)$/;"	t
aws	Makefile	/^	aws s3 sync s3:\/\/$(BUCKET)\/data\/ data\/$/;"	t
changes	docs/Makefile	/^changes:$/;"	t
clean	Makefile	/^clean:$/;"	t
clean	docs/Makefile	/^clean:$/;"	t
clean_stopwords	build/lib/src/features/build_features.py	/^def clean_stopwords(data, input_columnm, output_column=None):$/;"	f
clean_stopwords	src/features/build_features.py	/^def clean_stopwords(data, input_columnm, output_column=None):$/;"	f
complexity	tox.ini	/^max-complexity = 10$/;"	k	section:flake8
count_words	build/lib/src/features/build_features.py	/^def count_words(data, input_column, output_column=None):$/;"	f
count_words	src/features/build_features.py	/^def count_words(data, input_column, output_column=None):$/;"	f
create_environment	Makefile	/^create_environment:$/;"	t
data	Makefile	/^data: requirements$/;"	t
data/	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/ --profile $(PROFILE)$/;"	t
data/	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/$/;"	t
devhelp	docs/Makefile	/^devhelp:$/;"	t
device	build/lib/src/models/train_model.py	/^device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')$/;"	v
device	src/models/train_model.py	/^device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')$/;"	v
dirhtml	docs/Makefile	/^dirhtml:$/;"	t
doctest	docs/Makefile	/^doctest:$/;"	t
end	docs/make.bat	/^:end$/;"	l
epub	docs/Makefile	/^epub:$/;"	t
exclude_patterns	docs/conf.py	/^exclude_patterns = ['_build']$/;"	v
extensions	docs/conf.py	/^extensions = []$/;"	v
fix_decimal	build/lib/src/models/train_model.py	/^fix_decimal = 4$/;"	v
fix_decimal	src/models/train_model.py	/^fix_decimal = 4$/;"	v
flake8	tox.ini	/^[flake8]$/;"	s
forward	build/lib/src/models/model.py	/^    def forward(self, questions1, q1_lens, questions2,q2_lens, hidden=None):$/;"	m	class:QuoraModel
forward	src/models/model.py	/^    def forward(self, questions1, q1_lens, questions2,q2_lens, hidden=None):$/;"	m	class:QuoraModel
gettext	docs/Makefile	/^gettext:$/;"	t
help	Makefile	/^help:$/;"	t
help	docs/Makefile	/^help:$/;"	t
html	docs/Makefile	/^html:$/;"	t
html_static_path	docs/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	docs/conf.py	/^html_theme = 'default'$/;"	v
htmlhelp	docs/Makefile	/^htmlhelp:$/;"	t
htmlhelp_basename	docs/conf.py	/^htmlhelp_basename = 'quora-modeldoc'$/;"	v
index_columns	build/lib/src/models/train_model.py	/^index_columns = \\$/;"	v
index_columns	src/models/train_model.py	/^index_columns = \\$/;"	v
indexing_words	build/lib/src/features/build_features.py	/^def indexing_words(data, word_dict, input_column, output_column=None):$/;"	f
indexing_words	src/features/build_features.py	/^def indexing_words(data, word_dict, input_column, output_column=None):$/;"	f
info	docs/Makefile	/^info:$/;"	t
json	docs/Makefile	/^json:$/;"	t
latex	docs/Makefile	/^latex:$/;"	t
latex_documents	docs/conf.py	/^latex_documents = [$/;"	v
latex_elements	docs/conf.py	/^latex_elements = {$/;"	v
latexpdf	docs/Makefile	/^latexpdf:$/;"	t
length	tox.ini	/^max-line-length = 79$/;"	k	section:flake8
linkcheck	docs/Makefile	/^linkcheck:$/;"	t
lint	Makefile	/^lint:$/;"	t
log_fmt	build/lib/src/data/make_dataset.py	/^    log_fmt = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'$/;"	v
log_fmt	src/data/make_dataset.py	/^    log_fmt = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'$/;"	v
main	build/lib/src/data/make_dataset.py	/^def main(input_filepath, output_filepath):$/;"	f
main	build/lib/src/models/train_model.py	/^def main(input_filepath,index_file,model_name,frac_sample,test_frac,batch_size, epochs, learning/;"	f
main	src/data/make_dataset.py	/^def main(input_filepath, output_filepath):$/;"	f
main	src/models/train_model.py	/^def main(input_filepath,index_file,model_name,frac_sample,test_frac,batch_size, epochs, learning/;"	f
main	test_environment.py	/^def main():$/;"	f
man	docs/Makefile	/^man:$/;"	t
man_pages	docs/conf.py	/^man_pages = [$/;"	v
master_doc	docs/conf.py	/^master_doc = 'index'$/;"	v
models_folder	build/lib/src/models/train_model.py	/^models_folder = "..\/..\/models\/"$/;"	v
models_folder	src/models/train_model.py	/^models_folder = "..\/..\/models\/"$/;"	v
nn	build/lib/src/models/model.py	/^import torch.nn as nn$/;"	I
nn	build/lib/src/models/train_model.py	/^import torch.nn as nn$/;"	I
nn	src/models/model.py	/^import torch.nn as nn$/;"	I
nn	src/models/train_model.py	/^import torch.nn as nn$/;"	I
np	build/lib/src/features/build_features.py	/^import numpy as np$/;"	I
np	build/lib/src/models/create_dataset.py	/^import numpy as np$/;"	I
np	build/lib/src/models/train_model.py	/^import numpy as np$/;"	I
np	src/features/build_features.py	/^import numpy as np$/;"	I
np	src/models/create_dataset.py	/^import numpy as np$/;"	I
np	src/models/train_model.py	/^import numpy as np$/;"	I
padding	build/lib/src/features/build_features.py	/^def padding(data,max_length, input_column, output_column=None):$/;"	f
padding	src/features/build_features.py	/^def padding(data,max_length, input_column, output_column=None):$/;"	f
parser_process	src/models/train_model.py	/^        def parser_process(value, state):$/;"	f	member:OptionEatAll.add_to_parser	file:
pd	build/lib/src/data/make_dataset.py	/^import pandas as pd$/;"	I
pd	build/lib/src/models/create_dataset.py	/^import pandas as pd$/;"	I
pd	build/lib/src/models/train_model.py	/^import pandas as pd$/;"	I
pd	src/data/make_dataset.py	/^import pandas as pd$/;"	I
pd	src/models/create_dataset.py	/^import pandas as pd$/;"	I
pd	src/models/train_model.py	/^import pandas as pd$/;"	I
pickle	docs/Makefile	/^pickle:$/;"	t
plt	build/lib/src/models/train_model.py	/^import matplotlib.pyplot as plt$/;"	I
plt	src/models/train_model.py	/^import matplotlib.pyplot as plt$/;"	I
project	docs/conf.py	/^project = u'quora-model'$/;"	v
project_dir	build/lib/src/data/make_dataset.py	/^    project_dir = Path(__file__).resolve().parents[2]$/;"	v
project_dir	src/data/make_dataset.py	/^    project_dir = Path(__file__).resolve().parents[2]$/;"	v
pygments_style	docs/conf.py	/^pygments_style = 'sphinx'$/;"	v
qthelp	docs/Makefile	/^qthelp:$/;"	t
quora-model	README.md	/^quora-model$/;"	c
quora-model documentation!	docs/index.rst	/^quora-model documentation!$/;"	c
release	docs/conf.py	/^release = '0.1'$/;"	v
report_columns	build/lib/src/models/train_model.py	/^report_columns = ['epoch','acc','f1_score','loss','auc']$/;"	v
report_columns	src/models/train_model.py	/^report_columns = ['epoch','acc','f1_score','loss','auc']$/;"	v
report_figure_folder	build/lib/src/models/train_model.py	/^report_figure_folder = "..\/..\/reports\/figures\/"$/;"	v
report_figure_folder	src/models/train_model.py	/^report_figure_folder = "..\/..\/reports\/figures\/"$/;"	v
report_folder	build/lib/src/models/train_model.py	/^report_folder = "..\/..\/reports\/"$/;"	v
report_folder	src/models/train_model.py	/^report_folder = "..\/..\/reports\/"$/;"	v
requirements	Makefile	/^requirements: test_environment$/;"	t
s3	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/ --profile $(PROFILE)$/;"	t
s3	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/$/;"	t
s3	Makefile	/^	aws s3 sync s3:\/\/$(BUCKET)\/data\/ data\/ --profile $(PROFILE)$/;"	t
s3	Makefile	/^	aws s3 sync s3:\/\/$(BUCKET)\/data\/ data\/$/;"	t
save_model	build/lib/src/models/train_model.py	/^def save_model(model, optim, epoch, loss, learning_rate, model_name):$/;"	f
save_model	src/models/train_model.py	/^def save_model(model, optim, epoch, loss, learning_rate, model_name):$/;"	f
singlehtml	docs/Makefile	/^singlehtml:$/;"	t
source_suffix	docs/conf.py	/^source_suffix = '.rst'$/;"	v
stop	build/lib/src/features/build_features.py	/^stop = stopwords.words('english')$/;"	v
stop	src/features/build_features.py	/^stop = stopwords.words('english')$/;"	v
sync	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/ --profile $(PROFILE)$/;"	t
sync	Makefile	/^	aws s3 sync data\/ s3:\/\/$(BUCKET)\/data\/$/;"	t
sync	Makefile	/^	aws s3 sync s3:\/\/$(BUCKET)\/data\/ data\/ --profile $(PROFILE)$/;"	t
sync	Makefile	/^	aws s3 sync s3:\/\/$(BUCKET)\/data\/ data\/$/;"	t
sync_data_from_s3	Makefile	/^sync_data_from_s3:$/;"	t
sync_data_to_s3	Makefile	/^sync_data_to_s3:$/;"	t
temp_index_models	build/lib/src/models/train_model.py	/^temp_index_models = "..\/..\/reports\/index.csv"$/;"	v
temp_index_models	src/models/train_model.py	/^temp_index_models = "..\/..\/reports\/index.csv"$/;"	v
templates_path	docs/conf.py	/^templates_path = ['_templates']$/;"	v
test_environment	Makefile	/^test_environment:$/;"	t
test_model	build/lib/src/models/train_model.py	/^def test_model(test, model, criterion):$/;"	f
test_model	src/models/train_model.py	/^def test_model(test, model, criterion):$/;"	f
texinfo	docs/Makefile	/^texinfo:$/;"	t
texinfo_documents	docs/conf.py	/^texinfo_documents = [$/;"	v
text	docs/Makefile	/^text:$/;"	t
train_model	build/lib/src/models/train_model.py	/^def train_model(train, test, model, epochs, learning_rate, model_name, date, batch_size, sample_/;"	f
train_model	src/models/train_model.py	/^def train_model(train, test, model, epochs, learning_rate, model_name, date, batch_size, sample_/;"	f
truncate	build/lib/src/models/train_model.py	/^def truncate(number, digits) -> float:$/;"	f
truncate	src/models/train_model.py	/^def truncate(number, digits) -> float:$/;"	f
version	docs/conf.py	/^version = '0.1'$/;"	v
write_to_index	build/lib/src/models/train_model.py	/^def write_to_index(dict_index,index_file):$/;"	f
write_to_index	src/models/train_model.py	/^def write_to_index(dict_index,index_file):$/;"	f
